//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestHarness.TextServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TextServiceReference.TextServiceSoap")]
    public interface TextServiceSoap {
        
        // CODEGEN: Generating message contract since element name incoming from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Case", ReplyAction="*")]
        TestHarness.TextServiceReference.CaseResponse Case(TestHarness.TextServiceReference.CaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Case", ReplyAction="*")]
        System.Threading.Tasks.Task<TestHarness.TextServiceReference.CaseResponse> CaseAsync(TestHarness.TextServiceReference.CaseRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Case", Namespace="http://tempuri.org/", Order=0)]
        public TestHarness.TextServiceReference.CaseRequestBody Body;
        
        public CaseRequest() {
        }
        
        public CaseRequest(TestHarness.TextServiceReference.CaseRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CaseRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string incoming;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int flag;
        
        public CaseRequestBody() {
        }
        
        public CaseRequestBody(string incoming, int flag) {
            this.incoming = incoming;
            this.flag = flag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CaseResponse", Namespace="http://tempuri.org/", Order=0)]
        public TestHarness.TextServiceReference.CaseResponseBody Body;
        
        public CaseResponse() {
        }
        
        public CaseResponse(TestHarness.TextServiceReference.CaseResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CaseResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string CaseResult;
        
        public CaseResponseBody() {
        }
        
        public CaseResponseBody(string CaseResult) {
            this.CaseResult = CaseResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TextServiceSoapChannel : TestHarness.TextServiceReference.TextServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TextServiceSoapClient : System.ServiceModel.ClientBase<TestHarness.TextServiceReference.TextServiceSoap>, TestHarness.TextServiceReference.TextServiceSoap {
        
        public TextServiceSoapClient() {
        }
        
        public TextServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TextServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TextServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TextServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestHarness.TextServiceReference.CaseResponse TestHarness.TextServiceReference.TextServiceSoap.Case(TestHarness.TextServiceReference.CaseRequest request) {
            return base.Channel.Case(request);
        }
        
        public string Case(string incoming, int flag) {
            TestHarness.TextServiceReference.CaseRequest inValue = new TestHarness.TextServiceReference.CaseRequest();
            inValue.Body = new TestHarness.TextServiceReference.CaseRequestBody();
            inValue.Body.incoming = incoming;
            inValue.Body.flag = flag;
            TestHarness.TextServiceReference.CaseResponse retVal = ((TestHarness.TextServiceReference.TextServiceSoap)(this)).Case(inValue);
            return retVal.Body.CaseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestHarness.TextServiceReference.CaseResponse> TestHarness.TextServiceReference.TextServiceSoap.CaseAsync(TestHarness.TextServiceReference.CaseRequest request) {
            return base.Channel.CaseAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestHarness.TextServiceReference.CaseResponse> CaseAsync(string incoming, int flag) {
            TestHarness.TextServiceReference.CaseRequest inValue = new TestHarness.TextServiceReference.CaseRequest();
            inValue.Body = new TestHarness.TextServiceReference.CaseRequestBody();
            inValue.Body.incoming = incoming;
            inValue.Body.flag = flag;
            return ((TestHarness.TextServiceReference.TextServiceSoap)(this)).CaseAsync(inValue);
        }
    }
}
